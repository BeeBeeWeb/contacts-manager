{"version":3,"sources":["components/contact-info/contact-info.component.jsx","components/contact-list/contact-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["ContactInfo","contact","name","ContactList","contacts","onClick","map","e","id","App","onContactSelect","console","log","setState","selectedContact","state","fetch","then","response","json","users","contactsList","this","contactInfo","className","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAEaA,G,MAAc,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACzB,OACI,8BACI,oCAAKA,QAAL,IAAKA,OAAL,EAAKA,EAASC,WCHbC,EAAc,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,QACpC,OACI,6BACKD,EAASE,KAAI,SAACL,GACX,OACI,oBAEII,QAAS,SAAAE,GAAC,OAAIF,EAAQJ,EAASM,IAFnC,SAIKN,EAAQC,MAHJD,EAAQO,UC4CtBC,E,kDA3Cb,aAAe,IAAD,8BACZ,gBAcFC,gBAAkB,SAACT,EAASM,GAC1BI,QAAQC,IAAIX,GACZ,EAAKY,SAAS,CAAEC,gBAAiBb,KAdjC,EAAKc,MAAQ,CACXX,SAAU,GACVU,gBAAiB,MALP,E,gEASO,IAAD,OAClBE,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKP,SAAS,CAACT,SAAUgB,S,+BAS1C,IAAMC,EAAe,cAAC,EAAD,CAAajB,SAAUkB,KAAKP,MAAMX,SAAUC,QAASiB,KAAKZ,kBACzEa,EAAc,cAAC,EAAD,CAAatB,QAASqB,KAAKP,MAAMD,kBACrD,OACE,sBAAKU,UAAU,MAAf,UACE,kDACA,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,UAAf,SAEmC,IAA/BF,KAAKP,MAAMX,SAASqB,OAAe,2CAAoBJ,IAG3D,qBAAKG,UAAU,UAAf,SAEIF,KAAKP,MAAMD,gBAAkBS,EAAc,iB,GApCvCG,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.79aa9693.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const ContactInfo = ({contact}) => {\r\n    return (\r\n        <div>\r\n            <h3>{contact?.name}</h3>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const ContactList = ({ contacts, onClick}) => {\r\n    return (\r\n        <ol>\r\n            {contacts.map((contact) => {\r\n                return (\r\n                    <li\r\n                        key={contact.id}\r\n                        onClick={e => onClick(contact, e)}\r\n                    >\r\n                        {contact.name}\r\n                    </li>\r\n                )\r\n            })}\r\n        </ol>\r\n    )\r\n}","\nimport { Component } from 'react';\n\nimport './App.css';\nimport { ContactInfo } from './components/contact-info/contact-info.component';\nimport { ContactList } from './components/contact-list/contact-list.component';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      contacts: [],\n      selectedContact: null\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({contacts: users}))\n  }\n\n  onContactSelect = (contact, e) => {\n    console.log(contact);\n    this.setState({ selectedContact: contact });\n  }\n\n  render() {\n    const contactsList = <ContactList contacts={this.state.contacts} onClick={this.onContactSelect} />;\n    const contactInfo = <ContactInfo contact={this.state.selectedContact}/>\n    return (\n      <div className=\"App\">\n        <h1>Contacts Manager</h1>\n        <div className=\"container\">\n          <div className=\"sidebar\">\n            {\n              this.state.contacts.length === 0 ? <p>Loading...</p> : contactsList\n            }\n          </div>\n          <div className=\"content\">\n            {\n              this.state.selectedContact ? contactInfo : null\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}